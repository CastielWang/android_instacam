
precision mediump float;

uniform sampler2D sTexture;

uniform float uBrightness;
uniform float uContrast;
uniform float uSaturation;
uniform float uCornerRadius;

varying vec2 vTextureCoord;

void main() {
	vec3 color = texture2D(sTexture, vTextureCoord).rgb;
	
	color += uBrightness;
	if (uContrast > 0.0) {
		color = (color - 0.5) / (1.0 - uContrast) + 0.5;
	} else {
		color = (color - 0.5) * (1.0 + uContrast) + 0.5;
	}
	float average = dot(color, vec3(1.0)) / 3.0;
	if (uSaturation > 0.0) {
		color += (average - color) * (1.0 - 1.0 / (1.0 - uSaturation));
	} else {
		color += (average - color) * (-uSaturation);
	}
	
	float invSqrt2 = 2.0 / sqrt(2.0);
	float len = length(vTextureCoord - 0.5) * invSqrt2;
	len = smoothstep(1.0 - uCornerRadius, 1.0, len);
	color *= mix(0.3, 1.0, 1.0 - len);
	
	gl_FragColor = vec4(color, 1.0);
}
